name: build wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  detect-version-changes:
    uses: ./.github/workflows/check_version.yml
    with:
      file_path: crates/hyperdrivepy/pyproject.toml
    
  build-wheels:
    needs: detect-version-changes
    # Run on main if version has changed
    # if: >
    #   github.event_name == 'push' && 
    #   github.ref == 'refs/heads/main' 
    #   && needs.detect-version-changes.outputs.version_changed == 'true'
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-12]
        os: [ubuntu-latest]
        python-version: [cp310]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: check out hyperdrive
        uses: actions/checkout@master
        with:
          repository: delvtech/hyperdrive
          ref: "v0.9.0"
          path: "./hyperdrive"
          ssh-key: ${{ secrets.HYPERDRIVE_ACCESS_KEY }}

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: install python dependencies
        run: python -m pip install --upgrade pip && python -m pip install --upgrade -r requirements-dev.txt
      
      - name: build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: "${{ matrix.python-version }}-*"
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$HOME/.foundry/bin:$HOME/.cargo/env:$PATH" CARGO_TERM_COLOR="always"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$UserProfile\.foundry\bin;$UserProfile\.cargo\env;$PATH"'
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_BEFORE_ALL_LINUX: >
            echo "installing rust" &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            echo "installing foundry" &&
            curl -L https://foundry.paradigm.xyz | sh &&
            foundryup
          CIBW_BEFORE_ALL_MACOS: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show &&
            rustup target add aarch64-apple-darwin &&
            curl -L https://foundry.paradigm.xyz | sh &&
            foundryup
          CIBW_BUILD_VERBOSITY: 1
        with:
          output-dir: wheelhouse
          package-dir: crates/hyperdrivepy

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    # Run on main if version has changed
    # if: >
    #   github.event_name == 'push' && 
    #   github.ref == 'refs/heads/main' 
    #   && needs.detect-version-changes.outputs.version_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build crates/hyperdrivepy --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: crates/hyperdrivepy/dist/*.tar.gz

  upload_pypi:
    needs: [build-wheels, build-sdist, detect-version-changes]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    # Run on main if version has changed
    # if: >
    #   github.event_name == 'push' && 
    #   github.ref == 'refs/heads/main' 
    #   && needs.detect-version-changes.outputs.version_changed == 'true'
    # 
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
