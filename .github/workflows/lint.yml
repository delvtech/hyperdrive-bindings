name: Python lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  detect-changes:
    uses: ./.github/workflows/check_diff.yml
    with:
      pattern: ^crates/hyperdrivepy

  lint:
    needs: detect-changes
    # Run only if changes are detected
    if: needs.detect-changes.outputs.changed == 'true'
    name: python lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: check out hyperdrive
        uses: actions/checkout@master
        with:
          repository: delvtech/hyperdrive
          ref: "v0.4.0"
          path: "./hyperdrive"
          ssh-key: ${{ secrets.HYPERDRIVE_ACCESS_KEY }}

      # NOTE: This is needed to ensure that hyperdrive-wrappers builds correctly.
      - name: install foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install --upgrade -r requirements-dev.txt

      - name: install hyperdrivepy
        run: python -m pip install crates/hyperdrivepy

      - name: get all Python files
        id: list_files
        run: |
          echo "files=$(git ls-files '*.py' '*.pyi' | xargs)" >> $GITHUB_OUTPUT

      - name: run black
        run: python -m black --check --diff .

      - name: run pylint
        run: |
          files="${{ steps.list_files.outputs.files }}"
          if [ -n "$files" ]; then
            pylint --rcfile=.pylintrc $files
          else
            echo "No Python files found."
          fi

      - name: run pyright
        run: |
          files="${{ steps.list_files.outputs.files }}"
          if [ -n "$files" ]; then
            python -m pyright --project pyproject.toml $files
          else
            echo "No Python files found."
          fi
